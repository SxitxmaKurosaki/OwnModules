--[[

MADE BY SXITXMA

cipherSuite
code
content
contentLength
contentType
date
expiration
headers
lastModified
message
requestMethod
url
usingProxy

--]]




local httpSx = {}

LoadModule("json") -- ask Sxitxma#1000 to get the LoadModule function



function httpSx.post(URL, Headers, Payload)
  if not URL or URL == nil then os.exit(print("No Url entered")) end
  if not Payload or Payload == nil then Payload = "post1=val2&post3=val4" end
  if not Headers or Headers == nil then Headers = {["Content-Type"] = "application/json"} end

      function buildQuery(url, query)
        query = query or {}
        local query_string = ''
        for k, v in pairs(query) do
            query_string = query_string .. k .. '=' .. tostring(v) .. '&'
        end
        query_string = query_string:sub(1, -2)
        return url .. '?' .. query_string
    end
    
    local query = {
        wait = false
    }

    if Payload ~= "post1=val2&post3=val4" then Payload = json.encode(Payload) end
    
    local response = gg.makeRequest(buildQuery(URL, query), Headers, Payload)
    gg.sleep(1000)
    
    return response
end



function httpSx.get(URL, Headers)
  if not URL or URL == nil then os.exit(print("No uUrl entered")) end
  if not Headers or Headers == nil then Headers = {["Content-Type"] = "application/json"} end

  local response = gg.makeRequest(URL, Headers)
  gg.sleep(1000)

  return response
end





return httpSx
